events {
    worker_connections 1024;
}

http {
    server {
        listen                  80;
        server_name             localhost;

        location / {
            return              301 https://$host$request_uri;
        }
    }

    server {
        listen                  443 ssl;
        server_name             localhost;

        ssl_certificate         /etc/nginx/ssl/server.crt;
        ssl_certificate_key     /etc/nginx/ssl/server.key;

        ssl_client_certificate  /etc/nginx/ssl/ca.crt;
        ssl_verify_client       optional;
        ssl_verify_depth        2;

        ssl_protocols           TLSv1.2 TLSv1.3;
        ssl_ciphers             'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:!aNULL:!MD5:!3DES';

        # Optional: SSL pinning
        ssl_stapling on;
        ssl_stapling_verify on;

        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 10s;

        location / {
            if ($ssl_client_verify != SUCCESS) { return 403; }

            proxy_pass          http://eyr-backend:8080;

            proxy_set_header    Host $host;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto $scheme;

            proxy_set_header    SSL_Client_Issuer $ssl_client_i_dn;
            proxy_set_header    SSL_Client $ssl_client_s_dn;
            proxy_set_header    SSL_Client_Verify $ssl_client_verify;
        }
    }
}
